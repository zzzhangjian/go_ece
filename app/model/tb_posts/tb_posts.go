// ============================================================================
// This is auto-generated by gf cli tool only once. Fill this file as you wish.
// ============================================================================

package tb_posts

import (
	"github.com/gogf/gf/frame/g"
	"github.com/zzzhangjian/go_ece/library/response"
)

type PostPageRequest struct {
	response.PageRequest
	Type Type `json:"type"`
}

type Type string

const (
	AD     Type = "AD"
	Banner Type = "BANNER"
	Notice Type = "NOTICE"
)

// Fill with you ideas below.
// 分页查询
func Page(request PostPageRequest) (*response.PageResult, error) {
	condition := &g.Map{
		"post_type": string(request.Type),
	}
	total, err := Model.Where(condition).Count()
	if err != nil {
		return nil, err
	}
	records, err := Model.Where(condition).Limit(request.Size).Offset((request.Current - 1) * request.Size).Order("id desc").FindAll()
	if err != nil {
		return nil, err
	}
	result := &response.PageResult{
		PageRequest: request.PageRequest,
		Total:       total,
		Records:     records,
	}
	return result, err
}
